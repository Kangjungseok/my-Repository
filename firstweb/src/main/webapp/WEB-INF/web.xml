<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
  <display-name>firstweb</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.jsp</welcome-file>
    <welcome-file>default.htm</welcome-file>
  </welcome-file-list>
  <!--  
  context.xml에 정의된 Pooling 정보를 사용하는 설정 작업을 아래처럼 합니다.
  -->
  
  <resource-ref>
  	<description>maria DB</description>
  	<res-ref-name>jdbc/mariaconn</res-ref-name>
  	<!-- 리소스 JNDI 이름 -->
  	<res-type>javax.sql.DataSource</res-type>
  	<res-auth>Container</res-auth>
  </resource-ref>
  
  
  
  
  
  
  
  
  
  
  <!-- 서블릿을 was 에 등록을 해줘야만, 해당 서블릿 요청이 오게되면 was 에서 서블릿의 특정 메서드를 호출해서 결과를 Response 해줍니다.
  	따라서 어노테이션을 이용하지 않을 경우엔 다음처럼 반드시 서블릿 설정을 해줘야 합니다. -->
  <servlet>
  	<description>나의 첫 번째 서블릿..서블릿의 설명을 넣는 요소입니다. Client 에는 전송 안 됨</description>
  	<!-- 서블릿이 요청될 때 매핑될 이름을 지정합니다.  -->
  	<servlet-name>MyServlet</servlet-name>
  	<!-- 위 지정한 요청이 오면 작업을 수행할 서블릿 클래스를 지정하는 요소..이렇게 지정하면 
  	WAS 가 시작하면서 로드된 아래 정의된 서블릿 클래스의 instance 를 찾아서 쓰레드로 처리, 결과를 웹서버로 넘깁니다.
  	-->
  	<servlet-class>firstweb.HelloServlet1</servlet-class>
  </servlet>
  
  <!-- 아래는 위에서 정의된 서블릿을 어떤 요청 URL에 매핑할 것인지를 정의합니다.
  	위의 요청URL 을 일반적으로 URL Pattern 이라고 합니다.. 꼭 기억하세요. 
   -->
  
  <servlet-mapping>
  <!-- 요청에 응답할 서블릿 이름을 등록합니다. 이름은 위에서 정의한 MyServlet 으로 주면 됩니다.  -->
  	<servlet-name>MyServlet</servlet-name>
  	<!-- 어떤 요청 패턴(URL)에 위 서블릿을 매핑할 건지를 지정합니다.  -->
  	<url-pattern>/hiServlet</url-pattern>
  	<!--<url-pattern>/*do</url-pattern>  -->
  	<url-pattern>*.do</url-pattern>
  </servlet-mapping>
  
  
  
  <!-- 서블릿에서 사용될 초기화 정보 등은 init-param 이라는 요소를 이용해서 정의합니다.
  	   이 요소에는 다시 하위 요소로 key : value 를 정의할 수 있는데, 필수 요소입니다.
  	   필수 요소여부는 문서를 참조하거나, 요소를 정의하지 않을 시 에러가 보이는 지 여부로 알 수 있습니다.	
   -->
  <servlet>
  	<servlet-name>InitTestServ</servlet-name>
  	<servlet-class>firstweb.InitTestServlet</servlet-class>
  	
  	<init-param>
  		<param-name>start</param-name> <!-- 서블릿 초기화 정보중 key -->
  		<param-value>1</param-value>
  	</init-param>
  	<init-param>
  		<param-name>end</param-name> <!-- 서블릿 초기화 정보중 key -->
  		<param-value>10</param-value>
  	</init-param>
  </servlet>
  
  <servlet-mapping>
  	<servlet-name>InitTestServ</servlet-name>
  	<url-pattern>/initTest</url-pattern>
  </servlet-mapping>
  
  
  
  
  
  
  
  
  
  
  
  
  
  
</web-app>